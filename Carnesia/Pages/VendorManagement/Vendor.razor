@page "/vendor"
@using Carnesia.Shared.VendorManagement.VendorList
@using Carnesia.Shared.VendorManagement.NewVendor
@using Carnesia.Shared.VendorManagement.BulkVendorUpload
@using Carnesia.Shared.VendorManagement.Payable
@inject ILocalStorageService _storage

<MudPaper Elevation="0">
    <MudContainer Class="mt-5 d-flex justify-center">
        <MudButtonGroup Color="Color.Primary" Variant="Variant.Outlined" OverrideStyles="false">
            @if (new List<string> { "Admin", "Head of Department - Ops", "Manager - Procurement", "Management", "Executive-Accounts", "Manager-Accounts", "Marketing Manager", "Head of Marketing" }.Contains(role))
            {
                <MudButton Color="Color.Primary" Variant="CurrentPage == VendorList ? Variant.Filled : Variant.Outlined" OnClick="() => ChangePage(VendorList)">
                    @VendorList
                </MudButton>
            }
            @if (new List<string> { "Admin", "Head of Department - Ops", "Manager - Procurement" }.Contains(role))
            {
                <MudButton Color="Color.Primary" Variant="CurrentPage == NewVendor ? Variant.Filled : Variant.Outlined" OnClick="() => ChangePage(NewVendor)">@NewVendor</MudButton>
            }
            @if (new List<string> { "Admin", "Head of Department - Ops" }.Contains(role))
            {
                <MudButton Color="Color.Primary" Variant="CurrentPage == BulkVendorUpload ? Variant.Filled : Variant.Outlined" OnClick="() => ChangePage(BulkVendorUpload)">
                    @BulkVendorUpload
                </MudButton>
            }

            @if (new List<string> { "Admin", "Management", "Executive-Accounts", "Manager-Accounts" }.Contains(role))
            {
                <MudButton Color="Color.Primary" Variant="CurrentPage == Payable ? Variant.Filled : Variant.Outlined" OnClick="() => ChangePage(Payable)">
                    @Payable
                </MudButton>
            }

        </MudButtonGroup>
    </MudContainer>
</MudPaper>

@if (new List<string> { "Admin", "Head of Department - Ops", "Manager - Procurement", "Management", "Executive-Accounts", "Manager-Accounts", "Marketing Manager", "Head of Marketing" }.Contains(role))
{
    if (CurrentPage == VendorList)
    {
        <VendorList />
    }
    else if (CurrentPage == NewVendor)
    {
        <NewVendor />
    }
    else if (CurrentPage == BulkVendorUpload)
    {
        <BulkVendorUpload />
    }
    else if (CurrentPage == Payable)
    {
        <Payable />
    }
}


@code {
    // Page On Load
    protected override async Task OnInitializedAsync()
    {
        role = await _storage.GetItemAsStringAsync("role");
    }
    // Role
    private string role { get; set; }

    // Pages
    private string VendorList = "Vendor List";
    private string NewVendor = "New Vendor";
    private string BulkVendorUpload = "Bulk Vendor Upload";
    private string Payable = "Payable";

    // Current Page
    private string CurrentPage { get; set; } = "Vendor List";

    // Change Page
    private void ChangePage(string page)
    {
        CurrentPage = page;
    }

}
