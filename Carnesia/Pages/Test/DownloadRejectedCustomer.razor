@using Syncfusion.XlsIO
@using System.IO
@using System.Data
@inject Microsoft.JSInterop.IJSRuntime JS

<MudButton Variant="Variant.Filled" Color="Color.Info" OnClick="CreateDocumentTable">Download Rejected</MudButton>

@code {
	[Parameter]
	public List<CustomerUpload> CancelledCustomers { get; set; }

	// Create Document Table
	private async Task CreateDocumentTable()
	{
		using (ExcelEngine excelEngine = new ExcelEngine())
		{
			IApplication application = excelEngine.Excel;
			application.DefaultVersion = ExcelVersion.Xlsx;

			//Create a workbook.
			IWorkbook workbook = application.Workbooks.Create(1);
			IWorksheet worksheet = workbook.Worksheets[0];

			//Initialize DataTable and data get from SampleDataTable method.
			DataTable table = CustomerDataTableTable();

			//Export data from DataTable to Excel worksheet.
			worksheet.ImportDataTable(table, true, 1, 1);

			worksheet.UsedRange.AutofitColumns();

			//Save the document as a stream and return the stream.
			using (MemoryStream stream = new MemoryStream())
			{
				//Save the created Excel document to MemoryStream
				workbook.SaveAs(stream);

				//Download the excel file.
				await JS.SaveAs("RejectedCustomer.xlsx", stream.ToArray());
			}
		}
	}

	private DataTable CustomerDataTableTable()
	{
		DataTable reports = new DataTable();
		reports.Columns.Add("Name");
		reports.Columns.Add("UserName");
		reports.Columns.Add("PhoneNumber");
		reports.Columns.Add("CreditValue", typeof(int));

		foreach (var item in CancelledCustomers)
		{
			reports.Rows.Add(item.name, item.username, item.phoneNumber, item.creditValue);
		}
		return reports;
	}
}
