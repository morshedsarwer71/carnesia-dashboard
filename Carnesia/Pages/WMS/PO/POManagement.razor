@page "/po-management"
@using Carnesia.Shared.WMS.PO.CreatePo
@using Carnesia.Shared.WMS.PO.POList
@using Carnesia.Shared.WMS.PO.ReceivePo
@using Carnesia.Shared.WMS.PO.AwaitingApproval
@using Carnesia.Shared.WMS.PO.GenerateUID
@using Carnesia.Shared.WMS.PO.BulkUID
@inject ILocalStorageService _storage

<MudPaper Elevation="0">
    <MudContainer Class="mt-5 d-flex justify-center">
        <MudButtonGroup Color="Color.Primary" Variant="Variant.Outlined" OverrideStyles="false">
            @if (new List<string> { "Admin", "Inventory Associate - WH", "Executive - WH", "Sr. Executive - WH", "Head of Department - Ops", "Manager - WH", "Executive - Procurement", "Manager - Procurement", "Management", "Senior Executive - Marketing", "Marketing Manager", "Head of Marketing", "Outlet Experience Manager" }.Contains(role))
            {
                <MudButton Color="Color.Primary" Variant="CurrentPage == CreatePO ? Variant.Filled : Variant.Outlined" OnClick="() => ChangePage(CreatePO)">Create PO</MudButton>
                <MudButton Color="Color.Primary" Variant="CurrentPage == AwaitingApproval ? Variant.Filled : Variant.Outlined" OnClick="() => ChangePage(AwaitingApproval)">Awaiting Approval</MudButton>
            }
            @if (new List<string> { "Admin", "Inventory Associate - WH", "Executive - WH", "Sr. Executive - WH", "Head of Department - Ops", "Manager - WH", "Executive - Procurement", "Manager - Procurement", "Management", "Marketing Manager", "Head of Marketing", "Outlet Experience Manager" }.Contains(role))
            {
                <MudButton Color="Color.Primary" Variant="CurrentPage == ReceivePO ? Variant.Filled : Variant.Outlined" OnClick="() => ChangePage(ReceivePO)">Receive PO</MudButton>
            }
            @if (new List<string> { "Admin", "Inventory Associate - WH", "Executive - WH", "Sr. Executive - WH", "Head of Department - Ops", "Manager - WH", "Management", "Marketing Manager", "Head of Marketing", "Outlet Experience Manager" }.Contains(role))
            {
                <MudButton Color="Color.Primary" Variant="CurrentPage == GenerateUID ? Variant.Filled : Variant.Outlined" OnClick="() => ChangePage(GenerateUID)">Generate UID</MudButton>
                <MudButton Color="Color.Primary" Variant="CurrentPage == BulkUID ? Variant.Filled : Variant.Outlined" OnClick="() => ChangePage(BulkUID)">Bulk UID</MudButton>
            }
            @if (new List<string> { "Admin", "Inventory Associate - WH", "Executive - WH", "Sr. Executive - WH", "Head of Department - Ops", "Manager - WH", "Executive - Procurement", "Manager - Procurement", "Management", "Senior Executive - Marketing", "Executive - Marketing", "Marketing Manager", "Head of Marketing", "Outlet Experience Manager" }.Contains(role))
            {
                <MudButton Color="Color.Primary" Variant="CurrentPage == PurchaseOrderList ? Variant.Filled : Variant.Outlined" OnClick="() => ChangePage(PurchaseOrderList)">
                    Purchase Order List
                </MudButton>
            }
        </MudButtonGroup>
    </MudContainer>
</MudPaper>

@if (new List<string> { "Admin", "Inventory Associate - WH", "Executive - WH", "Sr. Executive - WH", "Head of Department - Ops", "Manager - WH", "Executive - Procurement", "Manager - Procurement", "Management", "Senior Executive - Marketing", "Marketing Manager", "Head of Marketing", "Outlet Experience Manager", "Executive - Marketing" }.Contains(role))
{
    if (CurrentPage == CreatePO)
    {
        <CreatePO />
    }
    else if (CurrentPage == PurchaseOrderList)
    {
        <POList />
    }
    else if (CurrentPage == ReceivePO)
    {
        <ReceivePo />
    }
    else if (CurrentPage == AwaitingApproval)
    {
        <AwaitingApproval />
    }
    else if (CurrentPage == GenerateUID)
    {
        <GenerateUID />
    }
    else if (CurrentPage == BulkUID)
    {
        <BulkUID />
    }
}



@code {
    // Page On Load
    protected override async Task OnInitializedAsync()
    {
        role = await _storage.GetItemAsStringAsync("role");
    }

    // Pages
    private string CreatePO { get; set; } = "Create PO";
    private string AwaitingApproval { get; set; } = "Awaiting Approval";
    private string ReceivePO { get; set; } = "Receive PO";
    private string PurchaseOrderList { get; set; } = "Purchase Order List";
    private string GenerateUID { get; set; } = "Generate UID";
    private string BulkUID { get; set; } = "Bulk UID";

    // Current Page
    private string CurrentPage { get; set; } = "Create PO";

    // Change Current Page
    void ChangePage(string pageName)
    {
        CurrentPage = pageName;
    }

    // Role
    private string role { get; set; }
}
