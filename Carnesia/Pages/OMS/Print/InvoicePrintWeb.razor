@layout PrintLayout
@page "/invoice-print-web/{trncode}"

@using Carnesia.Domain.Dashboard.GenerateBill;
@using Carnesia.Domain.OMS.Invoice
@inject HttpClient _httpclient
@inject ISnackbar Snackbar

@using Syncfusion.Blazor
@using Syncfusion.Blazor.BarcodeGenerator

<div style="width: 3.5in; margin: 0 auto; padding: 3px">
	<MudImage Width="250" Src="@("./Carnesia logo for POS Bill.png")" Alt="logo" Style="margin-left: auto; margin-right: auto; display: block;" />
	<hr />
	<h1 style="text-align:center; font-weight: 600;">Invoice</h1>
	<hr />
	@if (!String.IsNullOrEmpty(Invoice.trnCode))
	{
		<SfBarcodeGenerator Value="@(Invoice.trnCode)" Height="50px">
			<BarcodeGeneratorDisplayText Text="" Size="12" Alignment="Alignment.Center" Position="TextPosition.Bottom">
			</BarcodeGeneratorDisplayText>
		</SfBarcodeGenerator>
	}
	<h4>Order Date: @Invoice.orderDate</h4>
	<h4>Customer Name: @Invoice.customerName</h4>
	<h4>Phone #@Invoice.customerPhone</h4>
	<h4>Cutomer Address: @Invoice.address</h4>
	<h4>Shipping Area: @Invoice.shippingZone</h4>
	<h4>District: @Invoice.district</h4>
	<h4>Area: @Invoice.area</h4>
	<br />
	<MudGrid>
		<MudItem xs="6">
			<h3 style="font-weight: 600;">Payment: @Invoice.payment</h3>
		</MudItem>
		<MudItem xs="6">
			<h3 style="font-weight: 600; text-align: end;">COD: @Invoice.duePayment</h3>
		</MudItem>
	</MudGrid>
	<table style="width: 100%; border-collapse: collapse;">
		<tr style="font-size: 14px;">
			<th style="width: 60%" class="table-cell">Product Name & SKU</th>
			<th class="table-cell">Price</th>
			<th class="table-cell">Qty.</th>
			<th class="table-cell">Total</th>
		</tr>
		@if (Items.Count > 0)
		{
			foreach (var item in Items)
			{
				<tr style="font-size: 10px;">
					<td class="table-cell">
						<p style="font-weight: 600;">@item.productName</p>
					</td>
					<td class="table-cell">@item.price</td>
					<td class="table-cell">@item.quantity</td>
					<td class="table-cell">@item.total</td>
				</tr>
			}
		}
		@if (Combos.Count > 0)
		{
			foreach (var comboProduct in Combos)
			{
				<tr style="font-size: 10px;">
					<td class="table-cell">
						<p>@comboProduct.name</p>
						<p>Type-@comboProduct.bcType</p>
						<p>Code-@comboProduct.bcCode</p>
					</td>
					<td class="table-cell">@comboProduct.price</td>
					<td class="table-cell">@comboProduct.quantity</td>
					@*<td class="table-cell">0</td>*@
					<td class="table-cell">@comboProduct.totalPrice</td>
				</tr>
				foreach (var product in comboProduct.products)
				{
					<tr style="font-size: 10px;">
						<td class="table-cell">
							<p>@product.productName</p>
							<p>SKU-@product.sku</p>
						</td>
						<td class="table-cell">Under @comboProduct.bcType</td>
						<td class="table-cell">@product.quantity</td>
						@*<td class="table-cell">0</td>*@
						<td class="table-cell">Under @comboProduct.bcType</td>
					</tr>

				}
			}
		}
	</table>

	<div style="text-align:end; margin-top: 10px;">
		<h5>Subtotal: @Invoice.subtotal</h5>
		<h5>Shipping: @Invoice.shippingPrice</h5>
		<h5>Discount: @Invoice.discount</h5>
		<h5>Credit Used: @Invoice.creditUsed</h5>
		<h5>Reward Value: @Invoice.rewardValue</h5>
		<h5>Grand Total: @Invoice.grandTotal</h5>
	</div>


	<h5 style="text-align: center;" class="mt-3">Thank you for your business! Any Faulty Product Changes or
refund should be made with in 3 days and product Should be
intact.</h5>

	<div style="text-align:center; margin-top: 10px;">
		<h5>www.carnesia.com</h5>
		<h5>Helpline: 01748-623900</h5>
	</div>
</div>

@code {
	// Parameter
	[Parameter]
	public string trncode { get; set; }

	// Page On Load
	protected override async Task OnInitializedAsync()
	{
		await GetOrder();
		Items = Invoice.orderProducts;
		Combos = Invoice.comboItems;
	}


	// Invoice Data
	private InvoicePrintDTO Invoice = new InvoicePrintDTO();

	// Items
	private List<InvoicePrintProductsDTO> Items = new List<InvoicePrintProductsDTO>();
	private List<GenerateBillComboDTO> Combos = new List<GenerateBillComboDTO>();

	// Get Order 
	private async Task GetOrder()
	{
		try
		{
			Invoice = await _httpclient.GetFromJsonAsync<InvoicePrintDTO>($"Oms/invoice/{trncode}");
		}
		catch(Exception e)
		{
			Console.WriteLine(e.Message);
			Snackbar.Add("Internal server error!", Severity.Error);
		}
	}
}
