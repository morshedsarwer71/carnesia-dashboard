@page "/picklist"
@using Carnesia.Shared.OMS.CreatePicklist
@using Carnesia.Shared.OMS.DirectOrderPrint
@using Carnesia.Shared.OMS.PicklistReport
@using Carnesia.Shared.OMS.PickPack
@using Carnesia.Shared.OMS.GeneratedPicklist
@inject ILocalStorageService _storage

<MudPaper Elevation="0">
    <MudContainer Class="mt-5 d-flex justify-center">
        <MudButtonGroup Color="Color.Primary" Variant="Variant.Outlined" OverrideStyles="false">
            @if (new List<string> { "Admin", "Executive - WH", "Sr. Executive - WH", "Head of Department - Ops", "Manager - WH" }.Contains(role))
            {
                <MudButton Color="Color.Primary" Variant="CurrentPage == CreatePicklist ? Variant.Filled : Variant.Outlined" OnClick="() => ChangePage(CreatePicklist)">
                    @CreatePicklist
                </MudButton>
                <MudButton Color="Color.Primary" Variant="CurrentPage == GeneratedPicklist ? Variant.Filled : Variant.Outlined" OnClick="() => ChangePage(GeneratedPicklist)">
                    @GeneratedPicklist
                </MudButton>
                <MudButton Color="Color.Primary" Variant="CurrentPage == DirectOrderPrint ? Variant.Filled : Variant.Outlined" OnClick="() => ChangePage(DirectOrderPrint)">
                    @DirectOrderPrint
                </MudButton>
                <MudButton Color="Color.Primary" Variant="CurrentPage == PicklistReport ? Variant.Filled : Variant.Outlined" OnClick="() => ChangePage(PicklistReport)">
                    @PicklistReport
                </MudButton>
            }
            @if (new List<string> { "Admin", "Inventory Associate - WH", "Executive - WH", "Sr. Executive - WH", "Head of Department - Ops", "Manager - WH" }.Contains(role))
            {
                <MudButton Color="Color.Primary" Variant="CurrentPage == PickPack ? Variant.Filled : Variant.Outlined" OnClick="() => ChangePage(PickPack)">
                    @PickPack
                </MudButton>
            }
        </MudButtonGroup>
    </MudContainer>
</MudPaper>

@if (new List<string> { "Admin", "Executive - WH", "Sr. Executive - WH", "Head of Department - Ops", "Manager - WH", "Inventory Associate - WH" }.Contains(role))
{
    if (CurrentPage == CreatePicklist)
    {
        <CreatePicklist />
    }
    else if (CurrentPage == DirectOrderPrint)
    {
        <DirectOrderPrint />
    }
    else if (CurrentPage == PicklistReport)
    {
        <PicklistReport />
    }
    else if (CurrentPage == PickPack)
    {
        <PickPack />
    }
    else if (CurrentPage == GeneratedPicklist)
    {
        <GeneratedPicklist />
    }
}
@code {
    // Page On Load
    protected override async Task OnInitializedAsync()
    {
        role = await _storage.GetItemAsStringAsync("role");
    }

    // Role
    private string role { get; set; }

    // Pages
    private string CreatePicklist = "Create Picklist";
    private string DirectOrderPrint = "Direct Order Print";
    private string PicklistReport = "Picklist Report";
    private string PickPack = "Pick Pack";
    private string GeneratedPicklist = "Generated Picklist";

    // Current Page
    private string CurrentPage { get; set; } = "Create Picklist";


    // Change Page
    private void ChangePage(string page)
    {
        CurrentPage = page;
    }
}
