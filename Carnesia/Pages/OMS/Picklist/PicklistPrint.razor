@layout PrintLayout
@page "/picklist-print-oms/{pickCode}"

@using Syncfusion.Blazor
@using Syncfusion.Blazor.BarcodeGenerator
@inject HttpClient _httpClient


<div style="width: 210mm; margin: 0 auto;">
	<div>
		<p>Picklist ID: @Picklist.pickListCode</p>
		<p>Created on: @Picklist.createdAt</p>
		<p>Created by: @Picklist.createdBy</p>
		<p>Picklist Type: @Picklist.pickListType</p>
		@*<p>TO ID: @Picklist.toCode</p>*@
		<p>Total Quantity: @Picklist.totalQty</p>
	</div>

	<div style="width: 35%; margin: 10px auto;">
		@if (!String.IsNullOrEmpty(Picklist.pickListCode))
		{
			<SfBarcodeGenerator Value="@Picklist.pickListCode" Height="60px">
				<BarcodeGeneratorDisplayText Text="" Size="12" Alignment="Alignment.Center" Position="TextPosition.Bottom">
				</BarcodeGeneratorDisplayText>
			</SfBarcodeGenerator>
		}
	</div>

	<table style="width: 100%; border-collapse: collapse;">
		<tr style="font-size: 14px;">
			<th style="width: 40px" class="table-cell">SL</th>
			<th class="table-cell">Product Code</th>
			<th class="table-cell">SKU</th>
			<th class="table-cell">Product Name</th>
			<th class="table-cell">Quantity</th>
			<th class="table-cell">Bin Number</th>
			<th class="table-cell">Remarks</th>
		</tr>
		@if (Items.Count > 0)
		{
			foreach (var item in Picklist.bins)
			{
				sl++;
				<tr style="font-size: 12px;">
					<td class="table-cell">@sl</td>
					<td class="table-cell">@item.productCode</td>
					<td class="table-cell">@item.sku</td>
					<td class="table-cell">@item.productName</td>
					<td class="table-cell">@item.quantity</td>
					<td class="table-cell">@item.binName</td>
					<td class="table-cell"></td>
				</tr>
			}
		}

	</table>

	<MudGrid Class="mt-5">
		<MudItem xs="4">
			<p>Picked by........................</p>
		</MudItem>
		<MudItem xs="4">
			<p>Packed by........................</p>
		</MudItem>
		<MudItem xs="4">
			<p>Received by........................</p>
		</MudItem>
	</MudGrid>
</div>

@code {
	[Parameter]
	public string pickCode { get; set; }

	// SL
	private int sl = 0;

	// Page On Load
	protected override async Task OnInitializedAsync()
	{
		await GetPicklists();
	}

	// Picklist
	private PicklistDTO Picklist = new PicklistDTO();
	private List<PicklistProductsDTO> Items = new List<PicklistProductsDTO>();

	// Get Picklists
	private async Task GetPicklists()
	{
		Picklist = await _httpClient.GetFromJsonAsync<PicklistDTO>($"Oms/getpicklist/{pickCode}");
		Items = Picklist.bins;
	}

	private class PicklistDTO
	{
		public string pickListCode { get; set; }
		public string createdAt { get; set; }
		public string createdBy { get; set; }
		public string pickListType { get; set; }
		public string toCode { get; set; }
		public int totalQty { get; set; }
		public List<PicklistProductsDTO> bins { get; set; }
	}

	private class PicklistProductsDTO
	{
		public string productCode { get; set; }
		public string sku { get; set; }
		public string productName { get; set; }
		public int quantity { get; set; }
		public string binName { get; set; }
	}
}
