@page "/full-width-banner"

@using Carnesia.Domain.CMS.FullWidthBanner
@using Carnesia.Domain.Common.POCO
@using Carnesia.Shared.CMS.FullWidthBanner
@inject IFullWidthBanner _fullWidthBanner
@inject ISnackbar Snackbar
@inject IDialogService DialogService

<MudPaper Class="ma-2 pa-16">
	<MudContainer Fixed="true">
		<div class="d-flex justify-end mb-5">
			<MudButton Variant="Variant.Filled" Color="Color.Primary" StartIcon="@Icons.Filled.Add" OnClick="OpenAddBannerModal" >Add New Banner</MudButton>
		</div>

		<MudTable Items="@Elements" Dense="@tableCommon.Dense" Hover="@tableCommon.Hover" Bordered="@tableCommon.Bordered" Striped="@tableCommon.Striped">
			<ToolBarContent>
                <MudSpacer />
                <MudSpacer />
                <MudTextField @bind-Value="tableCommon.SearchTerm" Placeholder="Search" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium"                   Class="mt-0"/>
            </ToolBarContent>
            <HeaderContent>
                <MudTh>Name</MudTh>
                <MudTh>Image</MudTh>
                <MudTh>URL</MudTh>
                <MudTh>Action</MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd DataLabel="Category Name">@context.bannerName</MudTd>
                <MudTd DataLabel="Image">
                    <MudImage Src="@($"https://carnesiaapi.bespokeit.io/{context.imageWebUrl}")" Alt="@context.bannerName" Elevation="25" Class="rounded-lg" Style="width:50px" />
                </MudTd>
                <MudTd DataLabel="URL">@context.url</MudTd>
                <MudTd DataLabel="Action">
                    <MudSwitch @bind-Checked="@context.isPublished" Color="Color.Primary"   @onclick="(() => TogglePublish(context.id))"/>
                </MudTd>
            </RowTemplate>
			<PagerContent>
                <MudTablePager />
            </PagerContent>
		</MudTable>

		<div class="d-flex flex-wrap mt-4">
            <MudSwitch @bind-Checked="@tableCommon.Hover" Color="Color.Primary">Hover</MudSwitch>
            <MudSwitch @bind-Checked="@tableCommon.Dense" Color="Color.Secondary">Dense</MudSwitch>
            <MudSwitch @bind-Checked="@tableCommon.Striped" Color="Color.Tertiary">Striped</MudSwitch>
            <MudSwitch @bind-Checked="@tableCommon.Bordered" Color="Color.Warning">Bordered</MudSwitch>
        </div>
	</MudContainer>
</MudPaper>

@code {
    protected override async Task OnInitializedAsync()
    {
        await GetBanners();
    }



    // Table Customaization
    private TableCommon tableCommon = new TableCommon();

    // Table Content
    private IEnumerable<FullWidthBannerDTO> Elements = new List<FullWidthBannerDTO>();

    // Get Banners
    private async Task GetBanners()
    {
        Elements = await _fullWidthBanner.GetBanners();
    }

    // Toggle Publish
    private async Task TogglePublish(int id)
    {
        try
        {

            await _fullWidthBanner.PublishToggle(id);
            Snackbar.Add("Published Changed!", Severity.Success);
        }
        catch (Exception)
        {
            Snackbar.Add("Something Went Wrong!", Severity.Error);
            throw;
        }
    }

    // Add New Banner
    private async Task OpenAddBannerModal()
    {
        var parameters = new DialogParameters();
		parameters.Add("FormData", new CreateFullWidthBannerDTO());

        var options = new DialogOptions { CloseOnEscapeKey = true, FullWidth = true, CloseButton = true, };
		var dialog = await DialogService.Show<AddFullWidthBannerModal>("Add New Full Width Banner", parameters, options).Result;

        if (dialog.Data != null)
		{
			CreateFullWidthBannerDTO newBanner = dialog.Data as CreateFullWidthBannerDTO;

			try
			{
				await _fullWidthBanner.CreateBanner(newBanner);
				Snackbar.Add("New Banner Created Successfully!", Severity.Success);
				await GetBanners();
			}
			catch (Exception)
			{
				Snackbar.Add("Something Went Wrong!", Severity.Error);
				throw;
			}
		}
    }
}
