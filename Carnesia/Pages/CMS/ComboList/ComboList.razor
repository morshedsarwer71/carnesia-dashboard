@page "/combo-list"

@using Carnesia.Domain.CMS.ComboProducts
@using Carnesia.Domain.Common.POCO
@using Carnesia.Shared.CommonComponents
@inject ICombo _combo
@inject IDialogService DialogService
@inject NavigationManager NavigationManager

<MudPaper Class="pa-16 ma-2">
	<MudContainer Fixed="true">
		<MudTable Items="@Elements" Dense="@tableCommon.Dense" Hover="@tableCommon.Hover" Bordered="@tableCommon.Bordered" Striped="@tableCommon.Striped" Filter="new Func<ComboListDTO,bool>(FilterFuncInitial)">
            <ToolBarContent>
                <MudSpacer />
                <MudSpacer />
                <MudTextField @bind-Value="tableCommon.SearchTerm" Immediate="true" Placeholder="Search" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"/>
            </ToolBarContent>
            <HeaderContent>
                <MudTh>Comnbo Name</MudTh>
                <MudTh>Image</MudTh>
                <MudTh>Start Date</MudTh>
                <MudTh>End Date</MudTh>
                <MudTh>Regular Price</MudTh>
                <MudTh>Combo Price</MudTh>
                <MudTh>Action</MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd DataLabel="Combo Name">@context.comboProductName</MudTd>
                <MudTd DataLabel="Image">
                    <MudImage @onclick="() => ShowImage(context.imageUrl)" Src="@($"https://testapi.bespokeit.io/{context.imageUrl}")" Alt="" Elevation="25" Class="rounded-lg" Style="width:100px" />
                </MudTd>
                <MudTd DataLabel="Start Date">@context.startDate</MudTd>
                <MudTd DataLabel="End Date">@context.endDate</MudTd>
                <MudTd DataLabel="Regular Price">@context.regularPrice</MudTd>
                <MudTd DataLabel="Combo Price">@context.comboPrice</MudTd>
                <MudTd DataLabel="Action">
                    <MudButton Variant="Variant.Filled" Color="Color.Warning" OnClick="() => NavigateToUpdate(context.comboId)">
                        Edit
                    </MudButton>
                </MudTd>
            </RowTemplate>
            <PagerContent>
                <MudTablePager />
            </PagerContent>
        </MudTable>
	</MudContainer>
</MudPaper>

@code {
	// Page On Load
	protected override async Task OnInitializedAsync()
	{
		await GetCombos();
	}

    // Table Customaization
    private TableCommon tableCommon = new TableCommon();

	// Combo List
	private List<ComboListDTO> Elements = new List<ComboListDTO>();

	// Get All Combo
	private async Task GetCombos()
	{
		Elements = await _combo.GetAllCombos();
	}

    // Table Search
    private bool FilterFuncInitial(ComboListDTO element) => FilterFunc(element, tableCommon.SearchTerm);

    private bool FilterFunc(ComboListDTO element, string searchString)
    {
        if (string.IsNullOrWhiteSpace(searchString))
            return true;
        if (element.comboProductName.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        return false;
    }

    // Show Image
    private void ShowImage(string url)
    {
        var parameters = new DialogParameters();
        parameters.Add("ImageUrl", url);

        var options = new DialogOptions { CloseOnEscapeKey = true, FullWidth = true, CloseButton = true, };
        DialogService.Show<ShowImageModal>("Image", parameters, options);
    }

    // Navigate To Combo Update 
    private void NavigateToUpdate(int id)
    {
        NavigationManager.NavigateTo($"update-combo/{id}");
    }
}
