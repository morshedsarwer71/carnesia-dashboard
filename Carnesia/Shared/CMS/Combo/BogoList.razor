@using Carnesia.Domain.CMS.ComboProducts
@using Carnesia.Domain.Common.POCO
@using Carnesia.Shared.CommonComponents
@inject ICombo _combo
@inject IDialogService DialogService
@inject NavigationManager NavigationManager

<MudPaper Class="py-16 px-3 ma-2">
    <MudContainer Fixed="true">
        <MudTable RowsPerPage="25" Items="@Elements" Dense="@tableCommon.Dense" Hover="@tableCommon.Hover" Bordered="@tableCommon.Bordered" Striped="@tableCommon.Striped" Filter="new Func<ComboListDTO,bool>(FilterFuncInitial)">
            <ToolBarContent>
                <MudSpacer />
                <MudSpacer />
                <MudTextField @bind-Value="tableCommon.SearchTerm" Immediate="true" Placeholder="Search" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0" />
            </ToolBarContent>
            <HeaderContent>
                <MudTh>Store</MudTh>
                <MudTh>Comnbo Name</MudTh>
                <MudTh>Comnbo Type</MudTh>
                <MudTh>BC Code</MudTh>
                <MudTh>Image</MudTh>
                <MudTh>Start Date</MudTh>
                <MudTh>End Date</MudTh>
                <MudTh>Regular Price</MudTh>
                <MudTh>Combo Price</MudTh>
                <MudTh>Created By</MudTh>
                <MudTh>Created At</MudTh>
                <MudTh>Updated By</MudTh>
                <MudTh>Updated AT</MudTh>
                <MudTh>Action</MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd DataLabel="">
                    @if (!context.ShowDetailsStore)
                    {
                            <MudIconButton Icon="@Icons.Material.Filled.Add" aria-label="Show" OnClick="() => ShowToBag(context.comboId)" />
                    }
                    else if (context.ShowDetailsStore)
                    {
                            <MudIconButton Icon="@Icons.Filled.Minimize" aria-label="Hide" OnClick="() => ShowToBag(context.comboId)" />
                    }
                </MudTd>
                <MudTd DataLabel="Combo Name">@context.comboProductName</MudTd>
                <MudTd DataLabel="Combo Type">@context.bcType</MudTd>
                <MudTd DataLabel="BC COde">@context.bcCode</MudTd>
                <MudTd DataLabel="Image">
                    <MudImage @onclick="() => ShowImage(context.imageUrl)" Src="@($"https://cscpguide.com/{context.imageUrl}")" Alt="" Elevation="25" Class="rounded-lg" Style="width:100px" />
                </MudTd>
                <MudTd DataLabel="Start Date">@context.startDate</MudTd>
                <MudTd DataLabel="End Date">@context.endDate</MudTd>
                <MudTd DataLabel="Regular Price">@context.regularPrice</MudTd>
                <MudTd DataLabel="Combo Price">@context.comboPrice</MudTd>
                <MudTd DataLabel="Created By">@context.createdBy</MudTd>
                <MudTd DataLabel="Created At">@context.createdAt</MudTd>
                <MudTd DataLabel="Updated By">@context.updatedBy</MudTd>
                <MudTd DataLabel="Updated At">@context.updatedAt</MudTd>
                <MudTd DataLabel="Action">
                    <MudButton Variant="Variant.Filled" Color="Color.Warning" OnClick="() => NavigateToUpdate(context.comboId)">
                        Edit
                    </MudButton>
                </MudTd>
            </RowTemplate>
            <ChildRowContent>
                @if (context.ShowDetailsStore)
                {
                        <td colspan="15">
                            <MudCard Elevation="0">
                                <MudCardContent Class="pa-0">
                                    <MudTable Items="@context.stores" Bordered="true" Dense="true" Context="DetailsContext" Hover="true" Elevation="0">
                                        <HeaderContent>
                                            <MudTh>Store Name</MudTh>
                                            <MudTh>Created By</MudTh>
                                            <MudTh>Created At</MudTh>
                                            <MudTh>Updated By</MudTh>
                                            <MudTh>Updated AT</MudTh>
                                        </HeaderContent>
                                        <RowTemplate>
                                            <MudTd DataLabel="Store Name">@DetailsContext.storeName</MudTd>
                                            <MudTd DataLabel="Created By">@DetailsContext.createdBy</MudTd>
                                            <MudTd DataLabel="Created At">@DetailsContext.createdAt</MudTd>
                                            <MudTd DataLabel="Updated By">@DetailsContext.updatedBy</MudTd>
                                            <MudTd DataLabel="Updated At">@DetailsContext.updatedAt</MudTd>
                                        </RowTemplate>
                                    </MudTable>
                                </MudCardContent>
                            </MudCard>
                        </td>
                }
            </ChildRowContent>
            <PagerContent>
                <MudTablePager />
            </PagerContent>
        </MudTable>
    </MudContainer>
</MudPaper>

@code {
    // Page On Load
    protected override async Task OnInitializedAsync()
    {
        await GetCombos();
    }

    // Table Customaization
    private TableCommon tableCommon = new TableCommon();

    // Combo List
    private List<ComboListDTO> Elements = new List<ComboListDTO>();

    // Get All Combo
    private async Task GetCombos()
    {
        Elements = await _combo.GetAllCombos("Bogo");
    }

    // Table Search
    private bool FilterFuncInitial(ComboListDTO element) => FilterFunc(element, tableCommon.SearchTerm);

    private bool FilterFunc(ComboListDTO element, string searchString)
    {
        if (string.IsNullOrWhiteSpace(searchString))
            return true;
        if (element.comboProductName.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        return false;
    }

    // Show Image
    private void ShowImage(string url)
    {
        var parameters = new DialogParameters();
        parameters.Add("ImageUrl", url);

        var options = new DialogOptions { CloseOnEscapeKey = true, FullWidth = true, CloseButton = true, };
        DialogService.Show<ShowImageModal>("Image", parameters, options);
    }

    // Navigate To Combo Update
    private void NavigateToUpdate(int id)
    {
        NavigationManager.NavigateTo($"update-combo/{id}");
    }

    // Show Details
    private void ShowToBag(int id)
    {
        ComboListDTO tmpElements = Elements.First(f => f.comboId == id);
        tmpElements.ShowDetailsStore = !tmpElements.ShowDetailsStore;
    }

    private void ShowProduct(int id)
    {
        ComboListDTO tmpElements = Elements.First(f => f.comboId == id);
        tmpElements.ShowDetailsProduct = !tmpElements.ShowDetailsProduct;
    }
}
