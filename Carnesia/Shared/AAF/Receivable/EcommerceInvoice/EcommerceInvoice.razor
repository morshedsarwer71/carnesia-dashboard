@using Carnesia.Domain.AAF.Receivable.Invoice
@inject IBank _bank

<MudPaper Class="px-3 py-16 ma-2">
    <MudContainer Fixed="true">
        <MudTable RowsPerPage="25" Items="@Elements" Dense="true" Hover="true" Loading="Loading" LoadingProgressColor="Color.Info">
            <HeaderContent>
                <MudTh></MudTh>
                <MudTh>Date & Time</MudTh>
                <MudTh>Invoice Number</MudTh>
                <MudTh>Invoice Amount</MudTh>
                <MudTh>Received Amount</MudTh>
                <MudTh>Lost</MudTh>
                <MudTh>Receiving Pending</MudTh>
                @*<MudTh>Store</MudTh>*@
                @*<MudTh>BU</MudTh>*@
                @*<MudTh>View</MudTh>*@
            </HeaderContent>
            <RowTemplate>
                <MudTd DataLabel="">
                    @if (!context.ShowDetails)
                    {
                        <MudIconButton Icon="@Icons.Material.Filled.Add" aria-label="Show" OnClick="() => ShowBtnPress(context.invoiceNumber)" />
                    }
                    else if (context.ShowDetails)
                    {
                        <MudIconButton Icon="@Icons.Filled.Minimize" aria-label="Hide" OnClick="() => ShowBtnPress(context.invoiceNumber)" />
                    }
                </MudTd>
                <MudTd DataLabel="Date & Time">@context.dateTime</MudTd>
                <MudTd DataLabel="Invoice Number">@context.invoiceNumber</MudTd>
                <MudTd DataLabel="Invoice Amount">@context.invoiceAmount</MudTd>
                <MudTd DataLabel="Received Amount">@context.receivedAmount</MudTd>
                <MudTd DataLabel="Lost">@context.lost</MudTd>
                <MudTd DataLabel="Receiving Pending">@context.receivePending</MudTd>
                @*<MudTd DataLabel="Store">@context.store</MudTd>*@
                @*<MudTd DataLabel="BU">@context.bu</MudTd>*@
                @*<MudTd DataLabel="View">
                    <MudButton Variant="Variant.Filled" Color="Color.Primary">View</MudButton>
                </MudTd>*@
            </RowTemplate>
            <ChildRowContent>
                @if (context.ShowDetails)
                {
                    <td colspan="7">
                        <MudCard Elevation="0">
                             <MudCardContent Class="pa-0">
                                 <MudTable Items="@context.ecommerceOrders" Context="DetailsContext" Dense="true" Striped="true" Hover="true" Elevation="0" CustomFooter="true">
                                    <HeaderContent>
                                        <MudTh>Order Date</MudTh>
                                        <MudTh>Order Id</MudTh>
                                        <MudTh>Customer Name</MudTh>
                                        <MudTh>Phone</MudTh>
                                        <MudTh>Order Value</MudTh>
                                        <MudTh>Receiveable</MudTh>
                                        <MudTh>Received</MudTh>
                                    </HeaderContent>
                                    <RowTemplate>
                                        <MudTd DataLabel="Order Date">@DetailsContext.orderDate</MudTd>
                                        <MudTd DataLabel="Order Id">@DetailsContext.trnCode</MudTd>
                                        <MudTd DataLabel="Customer Name">@DetailsContext.customerName</MudTd>
                                        <MudTd DataLabel="Phone">@DetailsContext.phoneNumber</MudTd>
                                        <MudTd DataLabel="Order Value">@DetailsContext.orderValue</MudTd>
                                        <MudTd DataLabel="Receiveable">@DetailsContext.tobeCollected</MudTd>
                                        <MudTd DataLabel="Received">@DetailsContext.amount</MudTd>
                                    </RowTemplate>
                                 </MudTable>
                             </MudCardContent>
                        </MudCard>
                    </td>
                }
            </ChildRowContent>
            <PagerContent>
                <MudTablePager PageSizeOptions="new int[]{50, 100}" />
            </PagerContent>
        </MudTable>
    </MudContainer>
</MudPaper>

@code {
    // Page On Load
    protected override async Task OnInitializedAsync()
    {
        await GetInvoices();
    }

    // Loading
    private bool Loading { get; set; }

    // Elements
    private List<InvoiceListDTO> Elements = new List<InvoiceListDTO>();

    // Get Invoices
    private async Task GetInvoices()
    {
        Loading = true;
        try
        {
            Elements = await _bank.GetEcommerceInvoices();
            Loading = false;
        }
        catch (Exception)
        {
            Loading = false;
            throw;
        }
    }
    // Show Details
    private void ShowBtnPress(string invoice)
    {
        InvoiceListDTO tmpElements = Elements.First(f => f.invoiceNumber == invoice);
        tmpElements.ShowDetails = !tmpElements.ShowDetails;
    }

}