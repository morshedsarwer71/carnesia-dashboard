@using Carnesia.Domain.CRM.Vouchers.GeneralVoucher.CreateVoucher
@inject ISnackbar Snackbar
@inject IGeneralVoucher _generalVoucher

<MudPaper Class="pa-16 pt-16 ma-2 mt-10">
	<MudContainer Fixed="true">
		<MudForm @ref="form" @bind-IsValid="@success" @bind-Errors="@errors">
            <MudGrid>
                <MudItem sm="6">
                    <MudTextField @bind-Value="FormData.gvCode" Label="Code" Required="true" RequiredError="Code is required!"/>
                </MudItem>
                <MudItem sm="6">
                    <MudNumericField @bind-Value="FormData.numOfVoucher" Label="Number of Voucher" Min="1" Required="true" RequiredError="Number of Voucher is required!"/>
                </MudItem>
                <MudItem sm="6">
                    <MudDatePicker Label="Start Date" DateFormat="yyyy-MM-dd" @bind-Text="StartDate" />
                </MudItem>
                <MudItem sm="6">
                    <MudTimePicker Label="Start Time" @bind-Time="StartTime" />
                </MudItem>
                <MudItem sm="6">
                    <MudDatePicker Label="End Date" DateFormat="yyyy-MM-dd" @bind-Text="EndDate" />
                </MudItem>
                <MudItem sm="6">
                    <MudTimePicker Label="End Time" @bind-Time="EndTime" />
                </MudItem>
                <MudItem sm="6">
                    <MudNumericField @bind-Value="FormData.minCartAmount" Label="Minimum Cart Amount" Min="1" Required="true" RequiredError="Minimum Cart Amount is required!"/>
                </MudItem>
                <MudItem sm="6">
                    <MudSelect @bind-Value="FormData.platformType" Label="Voucher Platform" AnchorOrigin="Origin.BottomCenter" Required="true" RequiredError="Voucher Platform is                              required!">
                        <MudSelectItem Value="@("App")" />
                        <MudSelectItem Value="@("General")" />
                        <MudSelectItem Value="@("Web")" />
                    </MudSelect>
                </MudItem>
                <MudItem sm="6">
                    <MudSelect @bind-Value="FormData.voucherDiscType" Label="Discount Type" AnchorOrigin="Origin.BottomCenter" Required="true" RequiredError="Discount Type is required!">
                        <MudSelectItem Value="@("Cash")" />
                        <MudSelectItem Value="@("Percent")" />
                    </MudSelect>
                </MudItem>
                <MudItem sm="6">
                    <MudNumericField @bind-Value="FormData.discAmntOrPercent" Label="Discount Amount" Min="1" Required="true" RequiredError="Discount Amount is required!"/>
                </MudItem>
                <MudItem sm="6">
                    <MudNumericField @bind-Value="FormData.upToDiscAmnt" Label="Up to Discount Amount" Min="1" Required="true" RequiredError="Up to Discount Amount is required!"/>
                </MudItem>
                <MudItem sm="6">
                    <MudTextField @bind-Value="FormData.description" Label="Description" Required="true" RequiredError="Description is required!"/>
                </MudItem>
            </MudGrid>
                    
            <div class="d-flex align-center justify-space-between mt-6">
                <MudButton Variant="Variant.Filled" Color="Color.Primary" Disabled="@(!success)" Class="ml-auto" OnClick="CreateNewVoucher">Submit</MudButton>
            </div>
        </MudForm>
	</MudContainer>
</MudPaper>

@code {
    // Form Ref
    bool success;
    string[] errors = { };
    MudForm form;

    // Form Data
    private AddGeneralVoucherDTO FormData = new AddGeneralVoucherDTO();

    // Start End Date
    private string StartDate { get; set; }
    private string EndDate { get; set; }
    private TimeSpan? StartTime = new TimeSpan();
    private TimeSpan? EndTime = new TimeSpan();

    // Create Voucher
    private async Task CreateNewVoucher()
    {
        if (String.IsNullOrEmpty(StartDate) || String.IsNullOrEmpty(EndDate))
        {
            Snackbar.Add("Start & End Date is required!", Severity.Error);
            return;
        }

        FormData.startDate = $"{StartDate}T{StartTime}.000Z";
        FormData.endDate = $"{EndDate}T{EndTime}.000Z";

        try
        {
            await _generalVoucher.CreateNewVoucher(FormData);
            Snackbar.Add("New Voucher Created Successfully!", Severity.Success);
        }
        catch (Exception)
        {
            Snackbar.Add("Something Went Wrong!", Severity.Error);
            throw;
        }
    }
}
