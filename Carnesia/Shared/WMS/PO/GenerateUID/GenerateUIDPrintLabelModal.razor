@using Carnesia.Domain.WMS.PO.POCO
@inject IJSRuntime IJS
@inject IPurchaseOrder _purchaseOrder


<MudDialog>
    <DialogContent>
        <MudForm Style="max-height: 90vh;" @ref="form" @bind-IsValid="@success" @bind-Errors="@errors">
            <MudGrid>
                <MudItem xs="12">
                    <MudRadioGroup @bind-SelectedOption="selectDate" Class="d-flex flex-column">
                        @foreach (var el in expList)
                        {
                            <MudRadio Option="el.paramDate" Color="Color.Primary" Dense="true">@el.expDate - @el.generatedSKUQty</MudRadio>
                        }
                    </MudRadioGroup>
                </MudItem>
            </MudGrid>

            <MudText Class="mt-5">Select Style</MudText>
            <MudRadioGroup @bind-SelectedOption="selectStyle">
                <MudGrid>
                    <MudItem xs="4">
                        <MudRadio Option="@("Style1")" Color="Color.Primary" Dense="true">
                            <MudImage Src="@("./Style1.jpeg")" style="width: 100%" />
                        </MudRadio>
                    </MudItem>
                    <MudItem xs="4">
                        <MudRadio Option="@("Style2")" Color="Color.Primary" Dense="true">
                            <MudImage Src="@("./Style2.jpeg")" style="width: 100%" />
                        </MudRadio>
                    </MudItem>
                    <MudItem xs="4">
                        <MudRadio Option="@("Style3")" Color="Color.Primary" Dense="true">
                            <MudImage Src="@("./Style3.jpeg")" style="width: 100%" />
                        </MudRadio>
                    </MudItem>
                    <MudItem xs="4">
                        <MudRadio Option="@("Style4")" Color="Color.Primary" Dense="true">
                            <MudImage Src="@("./Style4.jpeg")" style="width: 100%" />
                        </MudRadio>
                    </MudItem>
                    <MudItem xs="4">
                        <MudRadio Option="@("Style5")" Color="Color.Primary" Dense="true">
                            <MudImage Src="@("./Style5.jpeg")" style="width: 100%" />
                        </MudRadio>
                    </MudItem>
                    <MudItem xs="4">
                        <MudRadio Option="@("Style6")" Color="Color.Primary" Dense="true">
                            <MudImage Src="@("./Style6.jpeg")" style="width: 100%" />
                        </MudRadio>
                    </MudItem>
                    <MudItem xs="4">
                        <MudRadio Option="@("Style7")" Color="Color.Primary" Dense="true">
                            <MudImage Src="@("./Style7.jpeg")" style="width: 100%" />
                        </MudRadio>
                    </MudItem>
                </MudGrid>
            </MudRadioGroup>

            <MudText Class="mt-5" Color="Color.Error">@errorText</MudText>

            <div class="d-flex justify-end">
                <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="GoToPrint">Print Label</MudButton>
            </div>
        </MudForm>
    </DialogContent>
</MudDialog>

@code {
    // Modal On Load
    protected override async Task OnInitializedAsync()
    {
        await GetExpList(); 
    }

    [CascadingParameter] MudDialogInstance MudDialog { get; set; }

    [Parameter] public string poCode { get; set; }
    [Parameter] public string productCode { get; set; }

    void Cancel() => MudDialog.Cancel();

    // Exp Date List
    private List<UIDProfileDTO> expList = new List<UIDProfileDTO>();

    // Get Exp Date List
    private async Task GetExpList()
    {
        expList = await _purchaseOrder.GetUIDProfile(poCode, productCode);
    }

    // Form Ref
    MudForm form;
    bool success;
    string[] errors = { };

    // Select Date
    private string selectDate { get; set; }

    // Select Style
    private string selectStyle { get; set; }

    // Error Text 
    private string errorText { get; set; }

    // Go To Print Label
    private async Task GoToPrint()
    {
        errorText = string.Empty;
        if (String.IsNullOrEmpty(selectStyle))
        {
            errorText = "Please select a print style!";
            return;
        }
        if (selectStyle == "Style1" || selectStyle == "Style2" || selectStyle == "Style5" || selectStyle == "Style7")
        {
            if (String.IsNullOrEmpty(selectDate))
            {
                errorText = "Please select an exp date for this style!";
                return;
            }
        }
        await IJS.InvokeAsync<object>("open", new object[] { $"/print-label/{selectStyle}/{selectDate}/{poCode}/{productCode}", "_blank" });
    }
}
