@using Carnesia.Domain.Vendor.POCO
@inject IVendor _vendor
@inject ISnackbar _snackbar

<MudPaper Class="px-16 pb-16 pt-10 ma-2 mt-10">
	<MudContainer Fixed="true">
		<MudForm @ref="form" @bind-IsValid="@success" @bind-Errors="@errors">
			<MudGrid>
				<MudItem md="6">
					<MudTextField Label="Importer" @bind-Value="vendorPoco.importer" MaxLength="23" Required="true" RequiredError="Importer is required!"/>
				</MudItem>
				<MudItem md="6">
					<MudTextField Label="Vendor Name" @bind-Value="vendorPoco.name" Required="true" RequiredError="Vendor name is required!"/>
				</MudItem>
				<MudItem md="6">
					<MudTextField Label="Phone Number" @bind-Value="vendorPoco.phoneNumber" Required="true" RequiredError="Phone number is required!"/>
				</MudItem>
				<MudItem md="6">
					<MudTextField Label="Initial" @bind-Value="vendorPoco.initial" Required="true" RequiredError="Initial is required!"/>
				</MudItem>
				<MudItem md="6">
					<MudTextField Label="Owner" @bind-Value="vendorPoco.owner" Required="true" RequiredError="Owner is required!"/>
				</MudItem>
				<MudItem md="6">
					<MudTextField Label="Manager Name" @bind-Value="vendorPoco.managerName" Required="true" RequiredError="Manager name is required!"/>
				</MudItem>
				<MudItem md="6">
					<MudTextField Label="Bank Account Details" @bind-Value="vendorPoco.bankAccountDetails" Required="true" RequiredError="Bank account details is required!"/>
				</MudItem>
				<MudItem md="6">
					<MudTextField Label="Address Field 1" @bind-Value="vendorPoco.addressOne" MaxLength="23" Required="true" RequiredError="Address Field 1 is required!"/>
				</MudItem>
				<MudItem md="6">
					<MudTextField Label="Address Field 2(Optional)" @bind-Value="vendorPoco.addressTwo" MaxLength="23"/>
				</MudItem>
			</MudGrid>

			<div class="d-flex justify-end mt-6">
                <MudButton Variant="Variant.Filled" Color="Color.Primary" Disabled="@(!success)" OnClick="AddVendor" Class="ml-auto">Submit</MudButton>
            </div>
		</MudForm>
	</MudContainer>
</MudPaper>

@code {
	// Form Refs
	bool success;
	string[] errors = { };
	MudForm form;

	// Address
	private string AddressOne { get; set; }
	private string AddressTwo { get; set; }

	public PostVendorPoco vendorPoco=new PostVendorPoco();
	private async Task AddVendor()
	{
		var res = await _vendor.AddVendor(vendorPoco);
		if (res)
		{
			_snackbar.Configuration.PositionClass = Defaults.Classes.Position.TopEnd;
			_snackbar.Add("Vendor added successfully!", Severity.Success);
			form.Reset();
		}
		else
		{
			_snackbar.Configuration.PositionClass = Defaults.Classes.Position.TopEnd;
			_snackbar.Add("Error", Severity.Error);
		}
	}
}
